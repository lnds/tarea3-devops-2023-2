import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTarea3():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_tarea3(self):
    self.driver.get("http://localhost:3000/")
    self.driver.set_window_size(1647, 1104)
    self.driver.find_element(By.ID, ":r1:-tab-1").click()
    self.driver.find_element(By.CSS_SELECTOR, "#add-director-btn .w-16").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#add-director-btn .w-16")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("Andres Wood")
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#add-director-btn .w-16").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#add-director-btn .w-16")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "name").click()
    self.driver.find_element(By.ID, "name").send_keys("Quentin Tarantino")
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.ID, ":r1:-tab-0").click()
    self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn path").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn path")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Violeta se fue a los cielos")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Narra la vida de la artista chilena Violeta Parra")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2011")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Andres Wood']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn > .flex").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Kill Bill")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Una novia vengativa despierta de un coma y busca justicia con una lista de asesinatos")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2003")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Quentin Tarantino']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn .w-16").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn .w-16")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("Inception")
    self.driver.find_element(By.ID, "description").send_keys("Un ladrón de sueños lidera un equipo en un intrincado mundo onírico para realizar un último robo: implantar una idea en la mente de alguin")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2010")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Cristopher Nolan']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, "#add-movie-btn path").click()
    self.driver.find_element(By.ID, "title").click()
    self.driver.find_element(By.ID, "title").send_keys("The Dark Knight")
    self.driver.find_element(By.ID, "description").click()
    self.driver.find_element(By.ID, "description").send_keys("Batman enfrenta al caótico Joker mientras busca equilibrar la justicia y lidiar con decisiones morales impactantes en Gothan City")
    self.driver.find_element(By.ID, "year").click()
    self.driver.find_element(By.ID, "year").send_keys("2008")
    self.driver.find_element(By.ID, "director_id").click()
    dropdown = self.driver.find_element(By.ID, "director_id")
    dropdown.find_element(By.XPATH, "//option[. = 'Cristopher Nolan']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".h-min > .flex")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
  
